datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  passwordHash String? // ‚Üê optionnel
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // relations
  orders    Order[]
  accesses  Access[]
  purchases Purchase[]
}

model Product {
  id        String   @id @default(cuid())
  key       String   @unique
  name      String
  priceId   String
  amount    Int
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  orders    Order[]
  accesses  Access[]
  purchases Purchase[]
}

model Order {
  id              String   @id @default(cuid())
  userId          String
  productId       String
  stripeSessionId String   @unique
  amount          Int
  createdAt       DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict)

  @@index([userId])
  @@index([productId])
}

model Access {
  id        String   @id @default(cuid())
  userId    String
  productId String
  grantedAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict)

  @@unique([userId, productId])
  @@index([userId])
  @@index([productId])
}

model Purchase {
  id           String   @id @default(cuid())
  userId       String
  productId    String
  paidAt       DateTime
  accessActive Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Restrict)

  @@unique([userId, productId])
  @@index([userId])
  @@index([productId])
}

enum Role {
  ADMIN
  USER
}
