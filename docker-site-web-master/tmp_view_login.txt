import { getAuthSession } from "../../lib/auth";
import { prisma } from "../../lib/prisma";
import LoginForm from "../../components/LoginForm";
import ProductsSection from "../../components/ProductsSection";

export default async function LoginPage({ searchParams }: { searchParams?: Record<string, string | string[] | undefined> }) {
  const session = await getAuthSession();
  const email = session?.user?.email;
  let hasAccess = false;
  if (email) {
    const user = await prisma.user.findUnique({ where: { email }, select: { id: true } });
    if (user) {
      hasAccess = !!(await prisma.access.findFirst({ where: { userId: user.id } }));
    }
  }

  const fromSuccess = searchParams?.from === "success";

  return (
    <div className="container mx-auto max-w-4xl px-4 py-16">
      <h1 className="text-3xl md:text-4xl font-semibold mb-4">Connexion</h1>
      <p className="text-muted-foreground mb-8">Connectez-vous avec votre email pour accéder à votre espace.</p>
      {fromSuccess && (
        <div className="rounded-2xl border border-border bg-card p-4 mb-6" role="status" aria-live="polite">
          Paiement réussi ! Connectez-vous pour accéder à la formation.
        </div>
      )}
      {email && !hasAccess && (
        <div className="rounded-2xl border border-border bg-card p-4 mb-6" role="status" aria-live="polite">
          Vous êtes connecté avec <strong>{email}</strong>, mais vous n’avez pas encore d’accès à la formation. Achetez un produit pour débloquer l’accès.
        </div>
      )}
      <div className="grid md:grid-cols-2 gap-8 items-start">
        <LoginForm />
        <div>
          <h2 className="text-xl font-semibold mb-3">Pas encore d’accès ?</h2>
          <ProductsSection simple />
        </div>
      </div>
    </div>
  );
}

